vendor_name = ModelSim
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/skeleton_test_tb.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/skeleton_test.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/mif_outputs/halfTestCases.mif
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/mif_outputs/basic_test.mif
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/two_to_four_decoder.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/three_to_eight_decoder.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/sx.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/skeleton.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/sixteen_bit_adder.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/regfile.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/processor.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/pc.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/m21_32_bit.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/m21.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/imem.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/getSig.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/full_adder.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/four_bit_adder.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/five_to_thirtytwo_decoder.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/eight_bit_adder.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/dmem.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/dffe.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/ctrl_sig.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/csa.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/cmp.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/clock_div4.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/clock_div2.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/alu.v
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/imem.qip
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/dmem.qip
source_file = 1, Waveform.vwf
source_file = 1, Waveform1.vwf
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/altsyncram.tdf
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/stratix_ram_block.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/lpm_mux.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/lpm_decode.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/aglobal170.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/a_rdenreg.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/altrom.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/altram.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, c:/intelfpga_lite/17.0/quartus/libraries/megafunctions/cbx.lst
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/db/altsyncram_jid1.tdf
source_file = 1, C:/Users/vcm/Desktop/22Fall-550/db/altsyncram_ief1.tdf
design_name = skeleton_test
instance = comp, \data[0]~output , data[0]~output, skeleton_test, 1
instance = comp, \data[1]~output , data[1]~output, skeleton_test, 1
instance = comp, \data[2]~output , data[2]~output, skeleton_test, 1
instance = comp, \data[3]~output , data[3]~output, skeleton_test, 1
instance = comp, \data[4]~output , data[4]~output, skeleton_test, 1
instance = comp, \data[5]~output , data[5]~output, skeleton_test, 1
instance = comp, \data[6]~output , data[6]~output, skeleton_test, 1
instance = comp, \data[7]~output , data[7]~output, skeleton_test, 1
instance = comp, \data[8]~output , data[8]~output, skeleton_test, 1
instance = comp, \data[9]~output , data[9]~output, skeleton_test, 1
instance = comp, \data[10]~output , data[10]~output, skeleton_test, 1
instance = comp, \data[11]~output , data[11]~output, skeleton_test, 1
instance = comp, \data[12]~output , data[12]~output, skeleton_test, 1
instance = comp, \data[13]~output , data[13]~output, skeleton_test, 1
instance = comp, \data[14]~output , data[14]~output, skeleton_test, 1
instance = comp, \data[15]~output , data[15]~output, skeleton_test, 1
instance = comp, \data[16]~output , data[16]~output, skeleton_test, 1
instance = comp, \data[17]~output , data[17]~output, skeleton_test, 1
instance = comp, \data[18]~output , data[18]~output, skeleton_test, 1
instance = comp, \data[19]~output , data[19]~output, skeleton_test, 1
instance = comp, \data[20]~output , data[20]~output, skeleton_test, 1
instance = comp, \data[21]~output , data[21]~output, skeleton_test, 1
instance = comp, \data[22]~output , data[22]~output, skeleton_test, 1
instance = comp, \data[23]~output , data[23]~output, skeleton_test, 1
instance = comp, \data[24]~output , data[24]~output, skeleton_test, 1
instance = comp, \data[25]~output , data[25]~output, skeleton_test, 1
instance = comp, \data[26]~output , data[26]~output, skeleton_test, 1
instance = comp, \data[27]~output , data[27]~output, skeleton_test, 1
instance = comp, \data[28]~output , data[28]~output, skeleton_test, 1
instance = comp, \data[29]~output , data[29]~output, skeleton_test, 1
instance = comp, \data[30]~output , data[30]~output, skeleton_test, 1
instance = comp, \data[31]~output , data[31]~output, skeleton_test, 1
instance = comp, \data_readRegA[0]~output , data_readRegA[0]~output, skeleton_test, 1
instance = comp, \data_readRegA[1]~output , data_readRegA[1]~output, skeleton_test, 1
instance = comp, \data_readRegA[2]~output , data_readRegA[2]~output, skeleton_test, 1
instance = comp, \data_readRegA[3]~output , data_readRegA[3]~output, skeleton_test, 1
instance = comp, \data_readRegA[4]~output , data_readRegA[4]~output, skeleton_test, 1
instance = comp, \data_readRegA[5]~output , data_readRegA[5]~output, skeleton_test, 1
instance = comp, \data_readRegA[6]~output , data_readRegA[6]~output, skeleton_test, 1
instance = comp, \data_readRegA[7]~output , data_readRegA[7]~output, skeleton_test, 1
instance = comp, \data_readRegA[8]~output , data_readRegA[8]~output, skeleton_test, 1
instance = comp, \data_readRegA[9]~output , data_readRegA[9]~output, skeleton_test, 1
instance = comp, \data_readRegA[10]~output , data_readRegA[10]~output, skeleton_test, 1
instance = comp, \data_readRegA[11]~output , data_readRegA[11]~output, skeleton_test, 1
instance = comp, \data_readRegA[12]~output , data_readRegA[12]~output, skeleton_test, 1
instance = comp, \data_readRegA[13]~output , data_readRegA[13]~output, skeleton_test, 1
instance = comp, \data_readRegA[14]~output , data_readRegA[14]~output, skeleton_test, 1
instance = comp, \data_readRegA[15]~output , data_readRegA[15]~output, skeleton_test, 1
instance = comp, \data_readRegA[16]~output , data_readRegA[16]~output, skeleton_test, 1
instance = comp, \data_readRegA[17]~output , data_readRegA[17]~output, skeleton_test, 1
instance = comp, \data_readRegA[18]~output , data_readRegA[18]~output, skeleton_test, 1
instance = comp, \data_readRegA[19]~output , data_readRegA[19]~output, skeleton_test, 1
instance = comp, \data_readRegA[20]~output , data_readRegA[20]~output, skeleton_test, 1
instance = comp, \data_readRegA[21]~output , data_readRegA[21]~output, skeleton_test, 1
instance = comp, \data_readRegA[22]~output , data_readRegA[22]~output, skeleton_test, 1
instance = comp, \data_readRegA[23]~output , data_readRegA[23]~output, skeleton_test, 1
instance = comp, \data_readRegA[24]~output , data_readRegA[24]~output, skeleton_test, 1
instance = comp, \data_readRegA[25]~output , data_readRegA[25]~output, skeleton_test, 1
instance = comp, \data_readRegA[26]~output , data_readRegA[26]~output, skeleton_test, 1
instance = comp, \data_readRegA[27]~output , data_readRegA[27]~output, skeleton_test, 1
instance = comp, \data_readRegA[28]~output , data_readRegA[28]~output, skeleton_test, 1
instance = comp, \data_readRegA[29]~output , data_readRegA[29]~output, skeleton_test, 1
instance = comp, \data_readRegA[30]~output , data_readRegA[30]~output, skeleton_test, 1
instance = comp, \data_readRegA[31]~output , data_readRegA[31]~output, skeleton_test, 1
instance = comp, \data_readRegB[0]~output , data_readRegB[0]~output, skeleton_test, 1
instance = comp, \data_readRegB[1]~output , data_readRegB[1]~output, skeleton_test, 1
instance = comp, \data_readRegB[2]~output , data_readRegB[2]~output, skeleton_test, 1
instance = comp, \data_readRegB[3]~output , data_readRegB[3]~output, skeleton_test, 1
instance = comp, \data_readRegB[4]~output , data_readRegB[4]~output, skeleton_test, 1
instance = comp, \data_readRegB[5]~output , data_readRegB[5]~output, skeleton_test, 1
instance = comp, \data_readRegB[6]~output , data_readRegB[6]~output, skeleton_test, 1
instance = comp, \data_readRegB[7]~output , data_readRegB[7]~output, skeleton_test, 1
instance = comp, \data_readRegB[8]~output , data_readRegB[8]~output, skeleton_test, 1
instance = comp, \data_readRegB[9]~output , data_readRegB[9]~output, skeleton_test, 1
instance = comp, \data_readRegB[10]~output , data_readRegB[10]~output, skeleton_test, 1
instance = comp, \data_readRegB[11]~output , data_readRegB[11]~output, skeleton_test, 1
instance = comp, \data_readRegB[12]~output , data_readRegB[12]~output, skeleton_test, 1
instance = comp, \data_readRegB[13]~output , data_readRegB[13]~output, skeleton_test, 1
instance = comp, \data_readRegB[14]~output , data_readRegB[14]~output, skeleton_test, 1
instance = comp, \data_readRegB[15]~output , data_readRegB[15]~output, skeleton_test, 1
instance = comp, \data_readRegB[16]~output , data_readRegB[16]~output, skeleton_test, 1
instance = comp, \data_readRegB[17]~output , data_readRegB[17]~output, skeleton_test, 1
instance = comp, \data_readRegB[18]~output , data_readRegB[18]~output, skeleton_test, 1
instance = comp, \data_readRegB[19]~output , data_readRegB[19]~output, skeleton_test, 1
instance = comp, \data_readRegB[20]~output , data_readRegB[20]~output, skeleton_test, 1
instance = comp, \data_readRegB[21]~output , data_readRegB[21]~output, skeleton_test, 1
instance = comp, \data_readRegB[22]~output , data_readRegB[22]~output, skeleton_test, 1
instance = comp, \data_readRegB[23]~output , data_readRegB[23]~output, skeleton_test, 1
instance = comp, \data_readRegB[24]~output , data_readRegB[24]~output, skeleton_test, 1
instance = comp, \data_readRegB[25]~output , data_readRegB[25]~output, skeleton_test, 1
instance = comp, \data_readRegB[26]~output , data_readRegB[26]~output, skeleton_test, 1
instance = comp, \data_readRegB[27]~output , data_readRegB[27]~output, skeleton_test, 1
instance = comp, \data_readRegB[28]~output , data_readRegB[28]~output, skeleton_test, 1
instance = comp, \data_readRegB[29]~output , data_readRegB[29]~output, skeleton_test, 1
instance = comp, \data_readRegB[30]~output , data_readRegB[30]~output, skeleton_test, 1
instance = comp, \data_readRegB[31]~output , data_readRegB[31]~output, skeleton_test, 1
instance = comp, \imem_clock~output , imem_clock~output, skeleton_test, 1
instance = comp, \dmem_clock~output , dmem_clock~output, skeleton_test, 1
instance = comp, \processor_clock~output , processor_clock~output, skeleton_test, 1
instance = comp, \regfile_clock~output , regfile_clock~output, skeleton_test, 1
instance = comp, \address_imem[0]~output , address_imem[0]~output, skeleton_test, 1
instance = comp, \address_imem[1]~output , address_imem[1]~output, skeleton_test, 1
instance = comp, \address_imem[2]~output , address_imem[2]~output, skeleton_test, 1
instance = comp, \address_imem[3]~output , address_imem[3]~output, skeleton_test, 1
instance = comp, \address_imem[4]~output , address_imem[4]~output, skeleton_test, 1
instance = comp, \address_imem[5]~output , address_imem[5]~output, skeleton_test, 1
instance = comp, \address_imem[6]~output , address_imem[6]~output, skeleton_test, 1
instance = comp, \address_imem[7]~output , address_imem[7]~output, skeleton_test, 1
instance = comp, \address_imem[8]~output , address_imem[8]~output, skeleton_test, 1
instance = comp, \address_imem[9]~output , address_imem[9]~output, skeleton_test, 1
instance = comp, \address_imem[10]~output , address_imem[10]~output, skeleton_test, 1
instance = comp, \address_imem[11]~output , address_imem[11]~output, skeleton_test, 1
instance = comp, \q_imem[0]~output , q_imem[0]~output, skeleton_test, 1
instance = comp, \q_imem[1]~output , q_imem[1]~output, skeleton_test, 1
instance = comp, \q_imem[2]~output , q_imem[2]~output, skeleton_test, 1
instance = comp, \q_imem[3]~output , q_imem[3]~output, skeleton_test, 1
instance = comp, \q_imem[4]~output , q_imem[4]~output, skeleton_test, 1
instance = comp, \q_imem[5]~output , q_imem[5]~output, skeleton_test, 1
instance = comp, \q_imem[6]~output , q_imem[6]~output, skeleton_test, 1
instance = comp, \q_imem[7]~output , q_imem[7]~output, skeleton_test, 1
instance = comp, \q_imem[8]~output , q_imem[8]~output, skeleton_test, 1
instance = comp, \q_imem[9]~output , q_imem[9]~output, skeleton_test, 1
instance = comp, \q_imem[10]~output , q_imem[10]~output, skeleton_test, 1
instance = comp, \q_imem[11]~output , q_imem[11]~output, skeleton_test, 1
instance = comp, \q_imem[12]~output , q_imem[12]~output, skeleton_test, 1
instance = comp, \q_imem[13]~output , q_imem[13]~output, skeleton_test, 1
instance = comp, \q_imem[14]~output , q_imem[14]~output, skeleton_test, 1
instance = comp, \q_imem[15]~output , q_imem[15]~output, skeleton_test, 1
instance = comp, \q_imem[16]~output , q_imem[16]~output, skeleton_test, 1
instance = comp, \q_imem[17]~output , q_imem[17]~output, skeleton_test, 1
instance = comp, \q_imem[18]~output , q_imem[18]~output, skeleton_test, 1
instance = comp, \q_imem[19]~output , q_imem[19]~output, skeleton_test, 1
instance = comp, \q_imem[20]~output , q_imem[20]~output, skeleton_test, 1
instance = comp, \q_imem[21]~output , q_imem[21]~output, skeleton_test, 1
instance = comp, \q_imem[22]~output , q_imem[22]~output, skeleton_test, 1
instance = comp, \q_imem[23]~output , q_imem[23]~output, skeleton_test, 1
instance = comp, \q_imem[24]~output , q_imem[24]~output, skeleton_test, 1
instance = comp, \q_imem[25]~output , q_imem[25]~output, skeleton_test, 1
instance = comp, \q_imem[26]~output , q_imem[26]~output, skeleton_test, 1
instance = comp, \q_imem[27]~output , q_imem[27]~output, skeleton_test, 1
instance = comp, \q_imem[28]~output , q_imem[28]~output, skeleton_test, 1
instance = comp, \q_imem[29]~output , q_imem[29]~output, skeleton_test, 1
instance = comp, \q_imem[30]~output , q_imem[30]~output, skeleton_test, 1
instance = comp, \q_imem[31]~output , q_imem[31]~output, skeleton_test, 1
instance = comp, \address_dmem[0]~output , address_dmem[0]~output, skeleton_test, 1
instance = comp, \address_dmem[1]~output , address_dmem[1]~output, skeleton_test, 1
instance = comp, \address_dmem[2]~output , address_dmem[2]~output, skeleton_test, 1
instance = comp, \address_dmem[3]~output , address_dmem[3]~output, skeleton_test, 1
instance = comp, \address_dmem[4]~output , address_dmem[4]~output, skeleton_test, 1
instance = comp, \address_dmem[5]~output , address_dmem[5]~output, skeleton_test, 1
instance = comp, \address_dmem[6]~output , address_dmem[6]~output, skeleton_test, 1
instance = comp, \address_dmem[7]~output , address_dmem[7]~output, skeleton_test, 1
instance = comp, \address_dmem[8]~output , address_dmem[8]~output, skeleton_test, 1
instance = comp, \address_dmem[9]~output , address_dmem[9]~output, skeleton_test, 1
instance = comp, \address_dmem[10]~output , address_dmem[10]~output, skeleton_test, 1
instance = comp, \address_dmem[11]~output , address_dmem[11]~output, skeleton_test, 1
instance = comp, \wren~output , wren~output, skeleton_test, 1
instance = comp, \q_dmem[0]~output , q_dmem[0]~output, skeleton_test, 1
instance = comp, \q_dmem[1]~output , q_dmem[1]~output, skeleton_test, 1
instance = comp, \q_dmem[2]~output , q_dmem[2]~output, skeleton_test, 1
instance = comp, \q_dmem[3]~output , q_dmem[3]~output, skeleton_test, 1
instance = comp, \q_dmem[4]~output , q_dmem[4]~output, skeleton_test, 1
instance = comp, \q_dmem[5]~output , q_dmem[5]~output, skeleton_test, 1
instance = comp, \q_dmem[6]~output , q_dmem[6]~output, skeleton_test, 1
instance = comp, \q_dmem[7]~output , q_dmem[7]~output, skeleton_test, 1
instance = comp, \q_dmem[8]~output , q_dmem[8]~output, skeleton_test, 1
instance = comp, \q_dmem[9]~output , q_dmem[9]~output, skeleton_test, 1
instance = comp, \q_dmem[10]~output , q_dmem[10]~output, skeleton_test, 1
instance = comp, \q_dmem[11]~output , q_dmem[11]~output, skeleton_test, 1
instance = comp, \q_dmem[12]~output , q_dmem[12]~output, skeleton_test, 1
instance = comp, \q_dmem[13]~output , q_dmem[13]~output, skeleton_test, 1
instance = comp, \q_dmem[14]~output , q_dmem[14]~output, skeleton_test, 1
instance = comp, \q_dmem[15]~output , q_dmem[15]~output, skeleton_test, 1
instance = comp, \q_dmem[16]~output , q_dmem[16]~output, skeleton_test, 1
instance = comp, \q_dmem[17]~output , q_dmem[17]~output, skeleton_test, 1
instance = comp, \q_dmem[18]~output , q_dmem[18]~output, skeleton_test, 1
instance = comp, \q_dmem[19]~output , q_dmem[19]~output, skeleton_test, 1
instance = comp, \q_dmem[20]~output , q_dmem[20]~output, skeleton_test, 1
instance = comp, \q_dmem[21]~output , q_dmem[21]~output, skeleton_test, 1
instance = comp, \q_dmem[22]~output , q_dmem[22]~output, skeleton_test, 1
instance = comp, \q_dmem[23]~output , q_dmem[23]~output, skeleton_test, 1
instance = comp, \q_dmem[24]~output , q_dmem[24]~output, skeleton_test, 1
instance = comp, \q_dmem[25]~output , q_dmem[25]~output, skeleton_test, 1
instance = comp, \q_dmem[26]~output , q_dmem[26]~output, skeleton_test, 1
instance = comp, \q_dmem[27]~output , q_dmem[27]~output, skeleton_test, 1
instance = comp, \q_dmem[28]~output , q_dmem[28]~output, skeleton_test, 1
instance = comp, \q_dmem[29]~output , q_dmem[29]~output, skeleton_test, 1
instance = comp, \q_dmem[30]~output , q_dmem[30]~output, skeleton_test, 1
instance = comp, \q_dmem[31]~output , q_dmem[31]~output, skeleton_test, 1
instance = comp, \ctrl_writeEnable~output , ctrl_writeEnable~output, skeleton_test, 1
instance = comp, \ctrl_writeReg[0]~output , ctrl_writeReg[0]~output, skeleton_test, 1
instance = comp, \ctrl_writeReg[1]~output , ctrl_writeReg[1]~output, skeleton_test, 1
instance = comp, \ctrl_writeReg[2]~output , ctrl_writeReg[2]~output, skeleton_test, 1
instance = comp, \ctrl_writeReg[3]~output , ctrl_writeReg[3]~output, skeleton_test, 1
instance = comp, \ctrl_writeReg[4]~output , ctrl_writeReg[4]~output, skeleton_test, 1
instance = comp, \ctrl_readRegA[0]~output , ctrl_readRegA[0]~output, skeleton_test, 1
instance = comp, \ctrl_readRegA[1]~output , ctrl_readRegA[1]~output, skeleton_test, 1
instance = comp, \ctrl_readRegA[2]~output , ctrl_readRegA[2]~output, skeleton_test, 1
instance = comp, \ctrl_readRegA[3]~output , ctrl_readRegA[3]~output, skeleton_test, 1
instance = comp, \ctrl_readRegA[4]~output , ctrl_readRegA[4]~output, skeleton_test, 1
instance = comp, \ctrl_readRegB[0]~output , ctrl_readRegB[0]~output, skeleton_test, 1
instance = comp, \ctrl_readRegB[1]~output , ctrl_readRegB[1]~output, skeleton_test, 1
instance = comp, \ctrl_readRegB[2]~output , ctrl_readRegB[2]~output, skeleton_test, 1
instance = comp, \ctrl_readRegB[3]~output , ctrl_readRegB[3]~output, skeleton_test, 1
instance = comp, \ctrl_readRegB[4]~output , ctrl_readRegB[4]~output, skeleton_test, 1
instance = comp, \data_writeReg[0]~output , data_writeReg[0]~output, skeleton_test, 1
instance = comp, \data_writeReg[1]~output , data_writeReg[1]~output, skeleton_test, 1
instance = comp, \data_writeReg[2]~output , data_writeReg[2]~output, skeleton_test, 1
instance = comp, \data_writeReg[3]~output , data_writeReg[3]~output, skeleton_test, 1
instance = comp, \data_writeReg[4]~output , data_writeReg[4]~output, skeleton_test, 1
instance = comp, \data_writeReg[5]~output , data_writeReg[5]~output, skeleton_test, 1
instance = comp, \data_writeReg[6]~output , data_writeReg[6]~output, skeleton_test, 1
instance = comp, \data_writeReg[7]~output , data_writeReg[7]~output, skeleton_test, 1
instance = comp, \data_writeReg[8]~output , data_writeReg[8]~output, skeleton_test, 1
instance = comp, \data_writeReg[9]~output , data_writeReg[9]~output, skeleton_test, 1
instance = comp, \data_writeReg[10]~output , data_writeReg[10]~output, skeleton_test, 1
instance = comp, \data_writeReg[11]~output , data_writeReg[11]~output, skeleton_test, 1
instance = comp, \data_writeReg[12]~output , data_writeReg[12]~output, skeleton_test, 1
instance = comp, \data_writeReg[13]~output , data_writeReg[13]~output, skeleton_test, 1
instance = comp, \data_writeReg[14]~output , data_writeReg[14]~output, skeleton_test, 1
instance = comp, \data_writeReg[15]~output , data_writeReg[15]~output, skeleton_test, 1
instance = comp, \data_writeReg[16]~output , data_writeReg[16]~output, skeleton_test, 1
instance = comp, \data_writeReg[17]~output , data_writeReg[17]~output, skeleton_test, 1
instance = comp, \data_writeReg[18]~output , data_writeReg[18]~output, skeleton_test, 1
instance = comp, \data_writeReg[19]~output , data_writeReg[19]~output, skeleton_test, 1
instance = comp, \data_writeReg[20]~output , data_writeReg[20]~output, skeleton_test, 1
instance = comp, \data_writeReg[21]~output , data_writeReg[21]~output, skeleton_test, 1
instance = comp, \data_writeReg[22]~output , data_writeReg[22]~output, skeleton_test, 1
instance = comp, \data_writeReg[23]~output , data_writeReg[23]~output, skeleton_test, 1
instance = comp, \data_writeReg[24]~output , data_writeReg[24]~output, skeleton_test, 1
instance = comp, \data_writeReg[25]~output , data_writeReg[25]~output, skeleton_test, 1
instance = comp, \data_writeReg[26]~output , data_writeReg[26]~output, skeleton_test, 1
instance = comp, \data_writeReg[27]~output , data_writeReg[27]~output, skeleton_test, 1
instance = comp, \data_writeReg[28]~output , data_writeReg[28]~output, skeleton_test, 1
instance = comp, \data_writeReg[29]~output , data_writeReg[29]~output, skeleton_test, 1
instance = comp, \data_writeReg[30]~output , data_writeReg[30]~output, skeleton_test, 1
instance = comp, \data_writeReg[31]~output , data_writeReg[31]~output, skeleton_test, 1
instance = comp, \clock~input , clock~input, skeleton_test, 1
instance = comp, \clock~inputclkctrl , clock~inputclkctrl, skeleton_test, 1
instance = comp, \pc_clk1|r_reg[0]~0 , pc_clk1|r_reg[0]~0, skeleton_test, 1
instance = comp, \reset~input , reset~input, skeleton_test, 1
instance = comp, \reset~inputclkctrl , reset~inputclkctrl, skeleton_test, 1
instance = comp, \pc_clk1|r_reg[0] , pc_clk1|r_reg[0], skeleton_test, 1
instance = comp, \pc_clk1|clk_track~0 , pc_clk1|clk_track~0, skeleton_test, 1
instance = comp, \pc_clk1|clk_track~feeder , pc_clk1|clk_track~feeder, skeleton_test, 1
instance = comp, \pc_clk1|clk_track , pc_clk1|clk_track, skeleton_test, 1
instance = comp, \pc_clk1|clk_track~clkctrl , pc_clk1|clk_track~clkctrl, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[0].pc_dffe|q~0 , my_processor|pc1|pc[0].pc_dffe|q~0, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[0].pc_dffe|q , my_processor|pc1|pc[0].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[1].pc_dffe|q~1 , my_processor|pc1|pc[1].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[1].pc_dffe|q , my_processor|pc1|pc[1].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[2].pc_dffe|q~1 , my_processor|pc1|pc[2].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[2].pc_dffe|q , my_processor|pc1|pc[2].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[3].pc_dffe|q~1 , my_processor|pc1|pc[3].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[3].pc_dffe|q , my_processor|pc1|pc[3].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[4].pc_dffe|q~1 , my_processor|pc1|pc[4].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[4].pc_dffe|q , my_processor|pc1|pc[4].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[5].pc_dffe|q~1 , my_processor|pc1|pc[5].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[5].pc_dffe|q , my_processor|pc1|pc[5].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[6].pc_dffe|q~1 , my_processor|pc1|pc[6].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[6].pc_dffe|q , my_processor|pc1|pc[6].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[7].pc_dffe|q~1 , my_processor|pc1|pc[7].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[7].pc_dffe|q , my_processor|pc1|pc[7].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[8].pc_dffe|q~1 , my_processor|pc1|pc[8].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[8].pc_dffe|q , my_processor|pc1|pc[8].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[9].pc_dffe|q~1 , my_processor|pc1|pc[9].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[9].pc_dffe|q , my_processor|pc1|pc[9].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[10].pc_dffe|q~1 , my_processor|pc1|pc[10].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[10].pc_dffe|q , my_processor|pc1|pc[10].pc_dffe|q, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[11].pc_dffe|q~1 , my_processor|pc1|pc[11].pc_dffe|q~1, skeleton_test, 1
instance = comp, \my_processor|pc1|pc[11].pc_dffe|q , my_processor|pc1|pc[11].pc_dffe|q, skeleton_test, 1
instance = comp, \my_imem|altsyncram_component|auto_generated|ram_block1a0 , my_imem|altsyncram_component|auto_generated|ram_block1a0, skeleton_test, 1
instance = comp, \~GND , ~GND, skeleton_test, 1
instance = comp, \my_dmem|altsyncram_component|auto_generated|ram_block1a0 , my_dmem|altsyncram_component|auto_generated|ram_block1a0, skeleton_test, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
